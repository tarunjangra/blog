<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.1.6">Jekyll</generator><link href="http://tarunjangra.com/rss.xml" rel="self" type="application/atom+xml" /><link href="http://tarunjangra.com/" rel="alternate" type="text/html" /><updated>2019-04-23T14:24:37+00:00</updated><id>http://tarunjangra.com/</id><title>Tarun Jangra</title><subtitle>Tarun Jangra</subtitle><author><name>Tarun Jangra</name><email>tarun@izap.in</email></author><entry><title>Serving Authenticated Static Content was pretty expensive before today</title><link href="http://tarunjangra.com/2016/12/19/serving-authenticated-static-content.html" rel="alternate" type="text/html" title="Serving Authenticated Static Content was pretty expensive before today" /><published>2016-12-19T00:00:00+00:00</published><updated>2016-12-19T00:00:00+00:00</updated><id>http://tarunjangra.com/2016/12/19/serving-authenticated-static-content</id><content type="html" xml:base="http://tarunjangra.com/2016/12/19/serving-authenticated-static-content.html">&lt;p&gt;It has always been the pain when we need to server authenticated static content. Because we are bound with programming framework 
to handle the authentication job. And once authenticated, &lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;you have to read the file from the Disk through your programming to 
stream to the end user with correct mime type. This was the only solution for me before today.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/ABtCr5z.jpg&quot; alt=&quot;Nginx x-accel module&quot;&gt;&lt;/p&gt;

&lt;p&gt;While working on some project, i’ve found XSendfile and X-Accel. X-accel allows for internal redirection to a location 
determined by a header returned from a backend.&lt;/p&gt;

&lt;p&gt;This allows you to handle authentication, logging or whatever else you please in your backend and then have NGINX handle 
serving the contents from redirected location to the end user, thus freeing up the backend to handle other requests. This 
feature is commonly known as X-Sendfile.&lt;/p&gt;

&lt;p&gt;NGINX also has this feature, but implemented a little bit differently. In NGINX this feature is called X-Accel-Redirect.&lt;/p&gt;

&lt;p&gt;There are two main differences:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The header must contain a URI.&lt;/li&gt;
&lt;li&gt;The location should be defined as internal; to prevent the client from going directly to the URI.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We have been missing this feature in our elgg development. Now we will definitely use this module to get the better
 performance while service static content to the end user. No more stream reading from disk and serve further.&lt;/p&gt;</content><author><name>Tarun Jangra</name><email>tarun@izap.in</email></author><category term="nginx" /><category term="apache" /><category term="httpd" /><category term="module" /><summary>It has always been the pain when we need to server authenticated static content. Because we are bound with programming framework 
to handle the authentication job. And once authenticated,</summary></entry><entry><title>My First post with Jekyll</title><link href="http://tarunjangra.com/2016/07/09/hello-world.html" rel="alternate" type="text/html" title="My First post with Jekyll" /><published>2016-07-09T00:00:00+00:00</published><updated>2016-07-09T00:00:00+00:00</updated><id>http://tarunjangra.com/2016/07/09/hello-world</id><content type="html" xml:base="http://tarunjangra.com/2016/07/09/hello-world.html">&lt;p&gt;In this blog i do not have any thing particular to talk about. So it is just an introduction
of my new blog built on Jekyll. Since it is Jekyll based, so i&amp;#39;ve used Travis-CI for building
and github for hosting this blog.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;As described in &lt;a href=&quot;/about-me.html&quot;&gt;About Me&lt;/a&gt;, I&amp;#39;m passionate about programming, cloud computing,
Entrepreneurship. So that&amp;#39;s whyat i&amp;#39;ll be writing about.&lt;/p&gt;

&lt;p&gt;So just want to say &amp;quot;Hello&amp;quot; and Thank you to take time to read this blog.&lt;/p&gt;</content><author><name>Tarun Jangra</name><email>tarun@izap.in</email></author><category term="blogging" /><category term="tarun jangra" /><category term="jekyll" /><category term="jangra" /><summary>In this blog i do not have any thing particular to talk about. So it is just an introduction
of my new blog built on Jekyll. Since it is Jekyll based, so i&amp;#39;ve used Travis-CI for building
and github for hosting this blog.</summary></entry><entry><title>Amazon Elastic Cloud Computing (EC2)</title><link href="http://tarunjangra.com/2016/03/02/amazon-ec2.html" rel="alternate" type="text/html" title="Amazon Elastic Cloud Computing (EC2)" /><published>2016-03-02T00:00:00+00:00</published><updated>2016-03-02T00:00:00+00:00</updated><id>http://tarunjangra.com/2016/03/02/amazon-ec2</id><content type="html" xml:base="http://tarunjangra.com/2016/03/02/amazon-ec2.html">&lt;p&gt;Amazon Elastic Compute Cloud (Amazon EC2) is a web service that provides re-sizable compute capacity in the cloud. 
Amazon EC2 reduces the time required to obtain and boot new server instances to minutes, allowing you to quickly scale 
capacity, both up and down, as your computing requirements change.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure&gt;&lt;img src=&#39;http://imgur.com/CBUgmAj.png&#39; style=&#39;width:600px;max-width:100%;&#39; alt=&#39;Amazon EC2&#39;/&gt;&lt;figcaption&gt;Amazon EC2&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;We are working from last 10 years in IT I remember time where if we needed a new Active Directory Server or a new SQL Server 
we have to go to HP or go to DELL order new servers. we then had to get deliver to our data centers. we had to get racked.
 we had to do the networking setup them the internet accessible etc and you know your provisioning time should be anywhere
  from 5 to 10 business days. &lt;/p&gt;

&lt;p&gt;Then i started public cloud and was really exciting to see the capabilities of cloud in step having of 5 to 10 days 
  lead time you would reduce to literally just couple of minutes you can have that server up and running so that&amp;#39;s 
  really how cloud computing change the IT industry in the last 5 to 10 years so Amazon EC2 changes the economics of 
  computing by allowing you to pay only for capacity that you actually use. Amazon EC2 provides developers the tools 
  to build failure resilient applications and isolate themselves from common failure scenarios. So we just look at the first 
  section the advantage of the cloud computing is utility based model you can pay only by the hour. If you want to spin up 
  the development environment and just test on it and then terminate you only pay for 1 or 2 hours the environment is live 
  the old model way you would buy the server hardware you would be stuck with it.&lt;/p&gt;

&lt;h2 id=&quot;elastic-compute-cloud-pricing-options&quot;&gt;Elastic Compute Cloud Pricing Options&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Free Tier&lt;/strong&gt; you get 735 hours free on certain micro instances.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;On Demand&lt;/strong&gt; Which allow you to pay a fixed rate by the hour with no commitment.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reserved&lt;/strong&gt; Which provide you with a capacity reservation, and offer a significant discount on the hourly charge for 
an instance. Then you have 1 Year or 3 Year Terms so reserved just saying i need 10 servers of this size and i am willing 
to pay either up-front contractual willing to commit for 1 to 3 years and if you do use reserved instances then you get 
massive discounts compared with on demand.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Spot&lt;/strong&gt; This is enable you to bid whatever price you want to pay for instance capacity, providing for even greater savings 
if your applications have flexible start and end times.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;elastic-compute-cloud-on-demand-vs-reserved-vs-spot&quot;&gt;Elastic Compute Cloud On Demand vs Reserved vs Spot&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;On Demand Instances&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Users that want the low cost and flexibility of Amazon EC2 without any up-front payment or long-term commitment.&lt;/li&gt;
&lt;li&gt;Applications with short term, spike, or unpredictable workloads that cannot be interrupted.&lt;/li&gt;
&lt;li&gt;Applications being developed or tested on Amazon EC2 for the first time.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reserved Instances&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Applications with steady state or predictable usage so reserved might be your 3 or 4 web servers that you always want 
to turned on and then your on demand instances might be is the part of an auto scaling event.&lt;/li&gt;
&lt;li&gt;Applications that require reserved capacity.&lt;/li&gt;
&lt;li&gt;Users able to make upfront payment to reduce their total computing costs even further.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Spot Instances&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Applications that have flexible start and end times.&lt;/li&gt;
&lt;li&gt;Applications that are only feasible at very low compute prices.&lt;/li&gt;
&lt;li&gt;Users with urgent computing needs for large amounts &amp;nbsp;of additional capacity.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;elastic-compute-cloud-nbsp-on-demand-instances&quot;&gt;Elastic Compute Cloud&amp;nbsp;On Demand Instances**&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;General Purpose Instances&lt;/li&gt;
&lt;li&gt;Compute Optimized Instances

&lt;ul&gt;
&lt;li&gt;Compute Intensive Applications&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Memory Optimized Instances

&lt;ul&gt;
&lt;li&gt;Database &amp;amp; Memory Caching Applications&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;GPU Instances Instances

&lt;ul&gt;
&lt;li&gt;High Performance Parallel Computing (eg Hadoop)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Storage Optimized Instances

&lt;ul&gt;
&lt;li&gt;Data warehousing and Parallel Computing&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;local-instance-storage-vs-elastic-block-storage&quot;&gt;Local Instance Storage vs Elastic Block Storage&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Local Instance Storage&lt;/strong&gt;: Data stored on a local instance store will persist only as long as that instance is alive. So you terminate that 
Instances you loose all the data on that virtual hardware.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Elastic Block Storage Backed Storage&lt;/strong&gt;: Data that is stored on an Amazon Elastic Block Storage volume will persist independently of the life of the instance.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;storage-backed-by-elastic-block-storage&quot;&gt;Storage backed by Elastic Block Storage&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Provisioned IOPS Solid State Drive&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Designed for I/O intensive applications such as large relational or No-SQL databases.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;General purpose Solid State Drive&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Designed for 99.999% availability.&lt;/li&gt;
&lt;li&gt;Ratio of 3 IOPS per GB, offer single digit millisecond latency, and also have the ability to burst up to 3000 IOPS 
for short periods.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Magnetic&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Lowest cost per gigabyte of all Elastic Block Storage volume types. Magnetic volumes are ideal for workloads where data 
is accessed infrequently, and applications where the lowest storage cost is important.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Tarun Jangra</name><email>tarun@izap.in</email></author><category term="tarun jangra" /><category term="EC2" /><category term="AWS" /><summary>Amazon Elastic Compute Cloud (Amazon EC2) is a web service that provides re-sizable compute capacity in the cloud. 
Amazon EC2 reduces the time required to obtain and boot new server instances to minutes, allowing you to quickly scale 
capacity, both up and down, as your computing requirements change.</summary></entry><entry><title>ElasticSearch restore failed when s3-gateway is activated</title><link href="http://tarunjangra.com/2014/07/11/elasticSearch-restore-failed-when-s3-gateway-activated.html" rel="alternate" type="text/html" title="ElasticSearch restore failed when s3-gateway is activated" /><published>2014-07-11T00:00:00+00:00</published><updated>2014-07-11T00:00:00+00:00</updated><id>http://tarunjangra.com/2014/07/11/elasticSearch-restore-failed-when-s3-gateway-activated</id><content type="html" xml:base="http://tarunjangra.com/2014/07/11/elasticSearch-restore-failed-when-s3-gateway-activated.html">&lt;p&gt;Hufffff, Unfortunately i met this edge case. I have recovered from this situation. Here’s my scenario.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I am on ElasticSearch Version 1.1.0&lt;/li&gt;
&lt;li&gt;I have two data nodes. One is primary and other is replica.&lt;/li&gt;
&lt;li&gt;I am taking regular snapshots of my indexes.&lt;/li&gt;
&lt;li&gt;I am no more taking snapshots, So I have installed s3-gateway plugin to keep updating s3 buckets for persistent indexes.&lt;/li&gt;
&lt;/ul&gt;

&lt;!--more--&gt;

&lt;p&gt;Because of bulk import, i have stopped my replica to make import little faster. Once import get completed. I felt high CPU and Memory usage. And since i was aware that my indexes are safe because i am supporting s3-gateway. So i decided to restart remaining data node. Fuck…. It was a big mistake. When i tried to restart, it was not recovering all indexes. And we were about to launch our site in next two hours. And i am left with no index.&lt;/p&gt;

&lt;p&gt;Struggling here and there, i came to know that i am suffered with Bug in ElasticSearch. I tried to follow instruction at the end of this thread where i was suppose to update/edit metadata file from s3-bucket. I did that but no luck.&lt;/p&gt;

&lt;p&gt;Problem i found, All indexes and shards suppose to have _source folders. And i had so many indexes and their shards where _source folder was missing. And those indexes were unrecoverable. I have no solutions at that place and was literately sweating in Air Conditioned Room. &lt;/p&gt;

&lt;p&gt;Then one of my colleague, Narinder Kaur has joined me. And she gave me necessary support and we tried some more messes to fix it. Since i already made a mistake, So i took one backup of existing elasticsearch so that i would be able to back at same place in case of any other mess. And solutions we were planning to try was totally crap.&lt;/p&gt;

&lt;p&gt;So, Solution we tried. and which actually works….. Wow!.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;I updated my elasticsearch.yml, and remove s3-gateway settings related to my s3 bucket.&lt;/li&gt;
&lt;li&gt;I stopped elasticsearch.&lt;/li&gt;
&lt;li&gt;I rename my old cluster (elasticsearch) to elasticsearch.original.&lt;/li&gt;
&lt;li&gt;Restarted Elasticsearch. And it created new blank cluster. where i have no indexes.&lt;/li&gt;
&lt;li&gt;I created all required indexes with the same number of shards and replicas i previously had. In my case i had 5 indexes and 5 shards per index.&lt;/li&gt;
&lt;li&gt;Now i stop elasticsearch again.&lt;/li&gt;
&lt;li&gt;Start deleting (elasticsearch/nodes/0/indices/{index_name}&amp;gt;/{0,1,2,3,4}/{index,translog}. And move (elasticsearch.original/nodes/0/indices/{index_name}/{0,1,2,3,4}/{index,translog}) to (elasticsearch/nodes/0/indices/{index_name}/&lt;0,1,2,3,4&gt;/{index,translog})
&lt;strong&gt;Note&lt;/strong&gt;: Here, i did not touch _state folder of blank indexes. And now my all indexes has _status folder in each shard and each index.&lt;/li&gt;
&lt;li&gt;I copied all indexes as in 5th step.&lt;/li&gt;
&lt;li&gt;Restart ElasticSearch. and i found all indexes were recovered.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Observation: Well you should run your all custom mappings in blank indexes. I found some errors because i did not execute my mapping.&lt;/p&gt;

&lt;p&gt;Thank god, Now all indexes were recovered. And Thanks to Narinder Kaur, she got me required support at that time.&lt;/p&gt;</content><author><name>Tarun Jangra</name><email>tarun@izap.in</email></author><category term="blogging" /><category term="tarun jangra" /><category term="elastic search" /><category term="elastica" /><category term="S3-gateway" /><summary>Hufffff, Unfortunately i met this edge case. I have recovered from this situation. Here’s my scenario.


I am on ElasticSearch Version 1.1.0
I have two data nodes. One is primary and other is replica.
I am taking regular snapshots of my indexes.
I am no more taking snapshots, So I have installed s3-gateway plugin to keep updating s3 buckets for persistent indexes.</summary></entry><entry><title>How to install go-daddy ssl certificate on amazon load balancer</title><link href="http://tarunjangra.com/2012/12/29/how-to-install-godaddy-ssl-on-ELB.html" rel="alternate" type="text/html" title="How to install go-daddy ssl certificate on amazon load balancer" /><published>2012-12-29T00:00:00+00:00</published><updated>2012-12-29T00:00:00+00:00</updated><id>http://tarunjangra.com/2012/12/29/how-to-install-godaddy-ssl-on-ELB</id><content type="html" xml:base="http://tarunjangra.com/2012/12/29/how-to-install-godaddy-ssl-on-ELB.html">&lt;p&gt;I was struggling around to install SSL Certificate on ELB. And finally i’ve made that. Following are the steps you need to follow.&lt;/p&gt;

&lt;h3 id=&quot;requirements-amp-prerequisites&quot;&gt;Requirements &amp;amp; Prerequisites:&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Linux having openssl and apache installed.&lt;/li&gt;
&lt;li&gt;Open shell terminal on your Linux Box.&lt;/li&gt;
&lt;/ol&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;openssl genrsa -des3 -out private.key 1024
openssl req -new -key private.key -out www.your-web-site.com.csr&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You will be prompt to provide some basic information. Make sure you have added “Common Name”; a fully qualified domain name. like “www.xyz.com”&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open to &lt;a href=&quot;http://www.godaddy.com&quot;&gt;GoDaddy&lt;/a&gt; and go to ssl management control panel&lt;/li&gt;
&lt;li&gt;Select your Certificate. And click on Re-Key button.&lt;/li&gt;
&lt;li&gt;Copy content of “www.your-web-site.com.csr” and paste the content in “CSR” field. And press Re-Key.&lt;/li&gt;
&lt;li&gt;It will prompt you to download the keys. Available options to download are Apache, Nginx and Other. By the way, i used “Other” to download my keys to be used on ELB.&lt;/li&gt;
&lt;li&gt;Now unzip the downloaded file. It should have two *.crt files.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;now-back-to-your-terminal&quot;&gt;Now back to your terminal.&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;openssl rsa -in private.key -out private.pem&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now you will have following files in your current location.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;private.key&lt;/li&gt;
&lt;li&gt;private.pem&lt;/li&gt;
&lt;li&gt;”www.web-site.com.csr”&lt;/li&gt;
&lt;li&gt;sf_bundle.crt&lt;/li&gt;
&lt;li&gt;your-domain.com.crt&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now open your load balancer console and add https support. it will prompt you to add following values.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Certificate Name:* -&amp;gt; Put any friendly name&lt;/li&gt;
&lt;li&gt;Private Key:* -&amp;gt; Paste content of private.pem&lt;/li&gt;
&lt;li&gt;Public Key Certificate:* -&amp;gt; Paste content of your-domain.com.crt.&lt;/li&gt;
&lt;li&gt;Certificate Chain: -&amp;gt; Paste content of sf_bundle.crt&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Once done, Save all these values and here you go.&lt;/p&gt;</content><author><name>Tarun Jangra</name><email>tarun@izap.in</email></author><category term="GoDaddy" /><category term="SSL" /><category term="ELB" /><category term="AWS" /><summary>I was struggling around to install SSL Certificate on ELB. And finally i’ve made that. Following are the steps you need to follow.

Requirements &amp;amp; Prerequisites:


Linux having openssl and apache installed.
Open shell terminal on your Linux Box.</summary></entry><entry><title>Logical Volume Manager (LVM) can help if you are out of space</title><link href="http://tarunjangra.com/2012/11/12/Logical-Volume-Manager-LVM-can-help-if-you-are-out-of-space.html" rel="alternate" type="text/html" title="Logical Volume Manager (LVM) can help if you are out of space" /><published>2012-11-12T00:00:00+00:00</published><updated>2012-11-12T00:00:00+00:00</updated><id>http://tarunjangra.com/2012/11/12/Logical-Volume-Manager-LVM-can-help-if-you-are-out-of-space</id><content type="html" xml:base="http://tarunjangra.com/2012/11/12/Logical-Volume-Manager-LVM-can-help-if-you-are-out-of-space.html">&lt;p&gt;Today i was wondering when i found, my ubuntu server’s home partition is about to finish. It was having lots of projects we are 
working on. Replacing the old hardisk with the new of bigger size is one solution but it is so much time consuming. Ohhhh it is so scary.
 Copy every thing from old to new hard drive. Install every single application and library my scripts needed. &lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;img src=&quot;http://tarunjangra.com/images/assets/LVM_original_description.png&quot; alt=&quot;Logical Volume Manager&quot;&gt;&lt;/p&gt;

&lt;p&gt;Obviously that is time consuming process. But thanks to Logical Volume Manager(LVM). Fortunately i have used LVM to configure my old hard drive 
and that really helped me to extend my “home” drive in minutes without copying and all boring stuff as i explained above. My old 
hard disk scheme was:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;100MB /boot
73GB PV &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Physical Volume &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; GB /myDB &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; my database directory&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
45GB /home &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;All my projects are located in home&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So i was going out of space. What i did, I purchased new 1TB WD sata hard drive. And configure that on secondary sata port. 
My ubuntu box detect the new hard drive. I make it sure by following command.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;fdisk -l       
&lt;span class=&quot;c&quot;&gt;# i got my both partitions as /dev/sda and dev/sdb (new one).&lt;/span&gt;
vgdisplay    
&lt;span class=&quot;c&quot;&gt;# I got the name of the volume group to be used.&lt;/span&gt;
vgextend  /dev/sdb   
&lt;span class=&quot;c&quot;&gt;# this command put my new hard drive in the existing volume group.&lt;/span&gt;
vgdisplay   
&lt;span class=&quot;c&quot;&gt;# To make it sure if this new hard drive is actually added to the new group.&lt;/span&gt;
lvextend -L 500G /dev/volume-group-name/drive-name  
&lt;span class=&quot;c&quot;&gt;# Drive name was assigned to my &amp;quot;home&amp;quot; dir.&lt;/span&gt;
resize2fs /dev/volume-group-name/drive-name  
&lt;span class=&quot;c&quot;&gt;# This took about 10 mins to extend my home with more 500G.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So this is how i extend all space. I noticed while extending i was able to access all projects from that extending drive. 
There was no crash or no restart (usually forced by windows for such tasks :) ). It means process is so efficient, you can use
your disk even while making this arrangement to increase more space. Anyway, That how i get to work everything within 10 mins. 
It was really amazing experience.&lt;/p&gt;</content><author><name>Tarun Jangra</name><email>tarun@izap.in</email></author><category term="UNIX" /><category term="Linux" /><category term="LVM" /><category term="Partitioning" /><summary>Today i was wondering when i found, my ubuntu server’s home partition is about to finish. It was having lots of projects we are 
working on. Replacing the old hardisk with the new of bigger size is one solution but it is so much time consuming. Ohhhh it is so scary.
 Copy every thing from old to new hard drive. Install every single application and library my scripts needed.</summary></entry><entry><title>Our development workflow with gitflow</title><link href="http://tarunjangra.com/2012/01/19/our-development-workflow-with-git.html" rel="alternate" type="text/html" title="Our development workflow with gitflow" /><published>2012-01-19T00:00:00+00:00</published><updated>2012-01-19T00:00:00+00:00</updated><id>http://tarunjangra.com/2012/01/19/our-development-workflow-with-git</id><content type="html" xml:base="http://tarunjangra.com/2012/01/19/our-development-workflow-with-git.html">&lt;p&gt;We are using git since 2009. Recently we have been forced by a platform to implement better development workflow. Where we 
handle better branching, code releases etc. And we found gitflow, A collection of git extensions provide high level of git 
based operations. &lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;I found it pretty much worthy to share our experience. Earlier than gitflow, we were using git with Master 
branch only where all developers suppose to push and code is suppose to move to development server and after testing, 
it is suppose to deploy on production server. Which is bit cumbersom process. and as we are getting in the requirement of better 
tracked development with less efforts we start feeling to have some serious process to get in. We have followed Vincent Driessen&amp;#39;s 
branching model.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://tarunjangra.com/images/assets/git-workflow-gitflow.png&quot; alt=&quot;Gitflow&quot;&gt;&lt;/p&gt;

&lt;p&gt;Master branch will be now our production ready branch. And Development branch will be our dev server branch. These two branches 
are suppose to be in the system for infinite time. We have learnt to keep  some temporary branches like “Feature branches” and 
“Release branches” which will really play a great role in the architecture we are workingin. We are using “Pivotal Tracker” for 
our Agile methodology, So when we have new milestone with multiple stories for a particular feature. It means, developer 
need to create new branche with the name “Feature/&lt;feature-name&gt;“. This branch is suppose to be cloned from master branch 
and suppose to be in the system till the completion of the feature. And then merge back to master branch. So in the whole 
release we are suppose to complete all pivotal stories by story ids.&lt;/p&gt;

&lt;p&gt;I am looking for some automatic process where all stories get started when developer creates the Feature branch. And when 
he deliver the whole feature and merge the branch back to the development. It should automatically change the status of the 
story to be “Delivered”. QA team will test and either accept or reject the corresponding story. I know webhooks provided
by github.com which can be implemented to achieve this with pivotal tracker.&lt;/p&gt;

&lt;p&gt;Overall, Gitflow methodology make the development flow quite better then what we were doing ealrier.&lt;/p&gt;</content><author><name>Tarun Jangra</name><email>tarun@izap.in</email></author><category term="GIT" /><category term="Collaboration" /><category term="Agile" /><summary>We are using git since 2009. Recently we have been forced by a platform to implement better development workflow. Where we 
handle better branching, code releases etc. And we found gitflow, A collection of git extensions provide high level of git 
based operations.</summary></entry><entry><title>Round-robin at application level to Balance MySQL Database Load</title><link href="http://tarunjangra.com/2011/06/10/Round-robin-at-application-level-to-Balance-MySQL-Database-Load.html" rel="alternate" type="text/html" title="Round-robin at application level to Balance MySQL Database Load" /><published>2011-06-10T00:00:00+00:00</published><updated>2011-06-10T00:00:00+00:00</updated><id>http://tarunjangra.com/2011/06/10/Round-robin-at-application-level-to-Balance-MySQL-Database-Load</id><content type="html" xml:base="http://tarunjangra.com/2011/06/10/Round-robin-at-application-level-to-Balance-MySQL-Database-Load.html">&lt;p&gt;Round robin technique facilitates you to distribute your read queries on number of available resources even if all servers are located
at different locations. Huge traffic sites like Facebook has to has such techniques working at the background to serve as fast as
 possible.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;I would like to discuss one of my personal implementation experience for such a large potential social networking site.
  Cloud computing is really help full but it also needs logical approach at programming level.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://tarunjangra.com/images/assets/mysql-57-clustering-the-developer-perspective-60-638.jpg&quot; alt=&quot;MySQL Round-Robin&quot;&gt;&lt;/p&gt;

&lt;h3 id=&quot;approach-1-six-servers-architecture-on-amazon-cloud&quot;&gt;Approach 1: Six servers architecture on amazon cloud.&lt;/h3&gt;

&lt;p&gt;WOW! I had implemented 1 load balancer, 1 mysql master db, 1 mysql slave db and 3 application server. Such an architecture&lt;br&gt;
can handle huge traffic. Since there is a separate application server layer where we can add more application servers anytime 
we need. So user requests get balanced on 3 application servers and they get response. But in my application i had one more 
problem. When user click on single link it executes 100+ SQLs because there is a framework overhead and some intentional queries.
Hmmmm, So MySql load is never balanced with this technique and it has to be. Because 1 request is triggering 100+ SQLs.
So i drill down to find out the solution and decided to separate sql reads and writes. Ok so with this, i get an opportunity 
to divide separate Writes of MySQL db and initiated one mysql slave server.&lt;/p&gt;

&lt;h3 id=&quot;does-this-really-get-me-at-the-end-of-performance-level&quot;&gt;Does this really get me at the end of performance level?&lt;/h3&gt;

&lt;p&gt;No. Because we use read queires more frequently then write. Son in 100+ SQLs i have lesser database writes. So My write server 
is still have idle resources.&lt;/p&gt;

&lt;h3 id=&quot;here-is-where-round-robin-comes-in&quot;&gt;Here is where Round Robin comes in.&lt;/h3&gt;

&lt;p&gt;If i could be able to develop a logic which distributes my 100+ SQLs to any number of replicated instances available. 
That could really work for me. Say i have 5 read servers for 100+ SQL. Than i can distribute around 20 SQL per server per request. 
And as we increase number of read server. System can adjust it self to distribute (SQL queries) / (Number of servers) (Qn / Sn). 
In this way, all of my server will work for every SQL requested from the system. And I could get maximum performance from servers.
 Because there is no use if we have 1000 Servers and 1 server is responding for 1 complete request. Because in this case 999 
 servers are free and which is wastage of Money. So i implemented that in My PHP application and that really makes sense to be 
 available on Cloud to use maximum resources.&lt;/p&gt;</content><author><name>Tarun Jangra</name><email>tarun@izap.in</email></author><category term="RDBMD" /><category term="MySQL" /><category term="Round robin" /><category term="AWS" /><category term="RDS" /><summary>Round robin technique facilitates you to distribute your read queries on number of available resources even if all servers are located
at different locations. Huge traffic sites like Facebook has to has such techniques working at the background to serve as fast as
 possible.</summary></entry><entry><title>How to create custom amazon AMI throught CLI Commands</title><link href="http://tarunjangra.com/2011/05/11/how-to-create-custome-amazon-AMI.html" rel="alternate" type="text/html" title="How to create custom amazon AMI throught CLI Commands" /><published>2011-05-11T00:00:00+00:00</published><updated>2011-05-11T00:00:00+00:00</updated><id>http://tarunjangra.com/2011/05/11/how-to-create-custome-amazon-AMI</id><content type="html" xml:base="http://tarunjangra.com/2011/05/11/how-to-create-custome-amazon-AMI.html">&lt;p&gt;Today, i am going to explain how you can create custom amazon ami to launch instance anytime later. 
This will have you clone of your server anytime you need. I am considering you are able to login your current running 
instance and you also have your private key and certificate downloaded on some location. &lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;img src=&quot;http://tarunjangra.com/images/assets/ami_lifecycle.png&quot; alt=&quot;Aamazon AMI&quot;&gt;&lt;/p&gt;

&lt;p&gt;Upload your private key and certificate on the running instance.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;scp -i path/of/yourkeypair.pem path/of/cert.pem /mnt
scp -i path/of/yourkeypair.pem path/of/pk.pem /mnt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Login to your instance and check if uploaded files are available in /mnt.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ec2-bundle-vol 
-d /mnt -k /mnt/pk.pem 
-c /mnt/cert.pem 
-u &lt;span class=&quot;m&quot;&gt;673491274719&lt;/span&gt; 
-p name-of-ami&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This will take some time and create the desired ami to be uploaded in the bucket. So you can use that later anytime you need.
Now upload your bundle to amazon s3 storage.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ec2-upload-bundle 
-b &amp;lt;S3-bucket-name&amp;gt; 
-m /mnt/name-of-ami.manifest.xml 
-a &amp;lt;AWS-access-key-id&amp;gt; 
-s  &amp;lt;AWS-secret-access-key&amp;gt; 
--location US-EAST-1C&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Note: Remember to upload to an S3 bucket in correct region. Also: if the bucket does not exit, it will be created for you. 
(I’ve used a European bucket as an example.)
Now we need to register AMI. Do following&amp;lt; br /&amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ec2-register &amp;lt;bucket-name&amp;gt;/sampleimage.manifest.xml --region US-EAST-1C&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It will return the new AMI ID (like ami-).
That’s it you are done with your custom ami.&lt;/p&gt;</content><author><name>Tarun Jangra</name><email>tarun@izap.in</email></author><category term="AMI" /><category term="AWS" /><category term="Amazon" /><category term="CLI" /><summary>Today, i am going to explain how you can create custom amazon ami to launch instance anytime later. 
This will have you clone of your server anytime you need. I am considering you are able to login your current running 
instance and you also have your private key and certificate downloaded on some location.</summary></entry><entry><title>Solr setup debian (lenny) + tomcat6 + solr</title><link href="http://tarunjangra.com/2010/03/10/Solr-setup-debian-(lenny)-tomcat6-solr.html" rel="alternate" type="text/html" title="Solr setup debian (lenny) + tomcat6 + solr" /><published>2010-03-10T00:00:00+00:00</published><updated>2010-03-10T00:00:00+00:00</updated><id>http://tarunjangra.com/2010/03/10/Solr-setup-debian-(lenny)-tomcat6-solr</id><content type="html" xml:base="http://tarunjangra.com/2010/03/10/Solr-setup-debian-(lenny)-tomcat6-solr.html">&lt;p&gt;I am working on a task to set solr enterprise search for elgg. I am as digging as getting surprised with this amazing 
search utility. First i am going to explain how to install solr with tomcat6.x. &lt;/p&gt;

&lt;h3 id=&quot;requirements&quot;&gt;Requirements:&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;JDK, JRE (OpenJDK, SunJDK)&lt;/li&gt;
&lt;li&gt;Tomcat6.x&lt;/li&gt;
&lt;li&gt;Latest solr&lt;/li&gt;
&lt;/ol&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;installation-jdk-jre&quot;&gt;Installation JDK,JRE:&lt;/h3&gt;

&lt;p&gt;Well i used to setup openjdk and openjre on my lenny server. It is quite easy to use debian package manager. You can install 
is using&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;apt-get install openjdk-6-jre, openjdk-6-jdk&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And i was installed with all jdk and jre environment. You may need to setup JAVA_HOME environment variable if you do not wish 
to install JDK at default location. You can do this in “.profile” located under your home or “/etc/profile” to make it enable for 
all available users.&lt;/p&gt;

&lt;h3 id=&quot;download-tomcate6-x&quot;&gt;Download tomcate6.x&lt;/h3&gt;

&lt;p&gt;I downloaded tomcat binary “apache tomcat 6.0.24” and untar it at “/usr/local/”. You can choose any of your selected location. 
So my location of all tomcat binaries was “/usr/local/tomcat”. That’s it, you have done with tomcat installation. 
You can start tomcat as:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /usr/local/tomcat/bin/
./startup.sh&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now put localhost:8080 in your browser. You will see the response of tomcat server. Now next step is to install solr 
as a tomcat application. It needs some configurations.&lt;/p&gt;

&lt;h3 id=&quot;installation-amp-configuration-of-solr&quot;&gt;Installation &amp;amp; configuration of Solr&lt;/h3&gt;

&lt;p&gt;Download apache solr and unzip it at any accessible location. Now create some directories under tomcat as&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mkdir /usr/local/tomcat/data/solr/elgg/conf -p
mkdir /usr/local/tomcat/data/solr/elgg/data -p&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now we need to copy “apache-solr-1.4.0.war” file for tomcat deployment. Go to the directory where you unzip the solr file. 
i found that file as “/apache-solr-1.4.0/dist/apache-solr-1.4.0.war”.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;cp apache-solr-1.4.0/dist/apache-solr-1.4.0.war /usr/local/tomcat/data/solr&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now, in /usr/local/tomcat/conf/Catalina/localhost we need to create and save a files which will be read the next time you 
start Tomcat, and properly deploy Solr. Use a text editor of your choice and create a files name “solrelgg.xml” in the 
/usr/local/tomcat/conf//Catalina/localhost subdirectory. Put the contents as follow&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Context&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;docBase=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;”/usr/local/tomcat/data/solr/apache-solr-1.4.0.war”&lt;/span&gt; 
&lt;span class=&quot;na&quot;&gt;debug=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;”0″&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;crossContext=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;”true”&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;Environment&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;”solr/home”&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;”java.lang.String”&lt;/span&gt; 
&lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;”/usr/local/tomcat/data/solr/elgg”&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;override=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;”true”&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Context&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now go to “apache-solr-1.4.0/example/solr/conf” and copy all default configuration files in to our configured configuration
 directory under tomcat.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;apache-solr-1.4.0/example/solr/conf
cp * -R /usr/local/tomcat/data/solr/elgg/conf
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /usr/local/tomcat/data/solr/elgg/conf&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now edit “solrconfig.xml” and find “solr.data.dir” parameter. Change it’s value to new data directory. I gave relative path like “
../data” So now it was pointing to new data directory “/usr/local/tomcat/data/solr/elgg/data”. Well this edit is an optional 
step. you can skip this. In that case, data directory will be created at default location according to the default value of 
“solr.data.dir”.
Now start tomcat server using “/usr/local/tomcat/bin/startup.sh” and browse localhost:8080/solrelgg&lt;/p&gt;

&lt;p&gt;It should show you “Welcome to Solr!” message with “Solr Admin” link.
I hope, it would work for you. Now elgg integration is just the matter of pushing new entities at create entity hooks and all 
other crud operations.&lt;/p&gt;</content><author><name>Tarun Jangra</name><email>tarun@izap.in</email></author><category term="SOLR" /><category term="Indexing Engine" /><category term="Debian" /><category term="tomcat6" /><category term="JDK" /><summary>I am working on a task to set solr enterprise search for elgg. I am as digging as getting surprised with this amazing 
search utility. First i am going to explain how to install solr with tomcat6.x. 

Requirements:


JDK, JRE (OpenJDK, SunJDK)
Tomcat6.x
Latest solr</summary></entry></feed>
